/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../route/__root'
import { Route as MainRouteImport } from './../route/_main/route'
import { Route as IndexImport } from './../route/index'
import { Route as EditorIndexImport } from './../route/editor/index'
import { Route as MainProjectImport } from './../route/_main/project'
import { Route as MainHomeImport } from './../route/_main/home'

// Create/Update Routes

const MainRouteRoute = MainRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EditorIndexRoute = EditorIndexImport.update({
  id: '/editor/',
  path: '/editor/',
  getParentRoute: () => rootRoute,
} as any)

const MainProjectRoute = MainProjectImport.update({
  id: '/project',
  path: '/project',
  getParentRoute: () => MainRouteRoute,
} as any)

const MainHomeRoute = MainHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => MainRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteImport
      parentRoute: typeof rootRoute
    }
    '/_main/home': {
      id: '/_main/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof MainHomeImport
      parentRoute: typeof MainRouteImport
    }
    '/_main/project': {
      id: '/_main/project'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof MainProjectImport
      parentRoute: typeof MainRouteImport
    }
    '/editor/': {
      id: '/editor/'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface MainRouteRouteChildren {
  MainHomeRoute: typeof MainHomeRoute
  MainProjectRoute: typeof MainProjectRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainHomeRoute: MainHomeRoute,
  MainProjectRoute: MainProjectRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof MainRouteRouteWithChildren
  '/home': typeof MainHomeRoute
  '/project': typeof MainProjectRoute
  '/editor': typeof EditorIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof MainRouteRouteWithChildren
  '/home': typeof MainHomeRoute
  '/project': typeof MainProjectRoute
  '/editor': typeof EditorIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_main': typeof MainRouteRouteWithChildren
  '/_main/home': typeof MainHomeRoute
  '/_main/project': typeof MainProjectRoute
  '/editor/': typeof EditorIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/home' | '/project' | '/editor'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/home' | '/project' | '/editor'
  id:
    | '__root__'
    | '/'
    | '/_main'
    | '/_main/home'
    | '/_main/project'
    | '/editor/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainRouteRoute: typeof MainRouteRouteWithChildren
  EditorIndexRoute: typeof EditorIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainRouteRoute: MainRouteRouteWithChildren,
  EditorIndexRoute: EditorIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_main",
        "/editor/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_main": {
      "filePath": "_main/route.tsx",
      "children": [
        "/_main/home",
        "/_main/project"
      ]
    },
    "/_main/home": {
      "filePath": "_main/home.tsx",
      "parent": "/_main"
    },
    "/_main/project": {
      "filePath": "_main/project.tsx",
      "parent": "/_main"
    },
    "/editor/": {
      "filePath": "editor/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
